---

## 🧱 Basic Git Configuration (Only once)

```bash
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"
```

---

## 🆕 Repository Setup

### Create a new local repo

```bash
git init
```

### Clone a GitHub repository to your local system

```bash
git clone <repo-url>
# Example: git clone https://github.com/username/repo.git
```

---

## 📂 Working with Files

### Check current status

```bash
git status
```

### Add files to staging (prepare for commit)

```bash
git add <filename>
# OR add all changes:
git add .
```

### Commit changes with a message

```bash
git commit -m "Your commit message"
```

---

## 🔁 Working with GitHub (Remote)

### Add a remote repository (if not set)

```bash
git remote add origin <repo-url>
```

### Push local commits to GitHub

```bash
git push origin main
# Or for master branch:
git push origin master
```

### Pull latest changes from GitHub

```bash
git pull origin main
```

---

## 🕵️‍♂️ Checking History

```bash
git log
# OR simpler one-line view
git log --oneline
```

---

## 🌿 Branching

### Create a new branch

```bash
git branch <branch-name>
```

### Switch to a branch

```bash
git checkout <branch-name>
```

### Create and switch to new branch

```bash
git checkout -b <branch-name>
```

### Merge branch into current branch

```bash
git merge <branch-name>
```

---

## 🧹 Clean Up

### Remove a tracked file

```bash
git rm <filename>
```

### Remove a file from Git but keep locally

```bash
git rm --cached <filename>
```

---

## 🔄 Sync with Remote

### Push all branches

```bash
git push --all origin
```

### Push tags

```bash
git push --tags
```

---

## 💣 Undoing Mistakes (Be careful!)

### Unstage a file

```bash
git reset <file>
```

### Undo last commit (keep changes)

```bash
git reset --soft HEAD~1
```

### Undo last commit (delete changes)

```bash
git reset --hard HEAD~1
```

---

## 📄 .gitignore

Create a file named `.gitignore` to avoid tracking files like:

```
node_modules/
*.log
*.env
```
